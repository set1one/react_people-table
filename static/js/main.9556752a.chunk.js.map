{"version":3,"sources":["components/PeopleTable/PeopleTable.tsx","App.tsx","index.tsx"],"names":["PeopleTable","props","people","tableHead","Object","keys","map","item","person","values","personItem","name","App","state","query","sortBy","isReversed","peopleFromServer","reverse","setState","currentState","getVisiblePeople","visiblePeople","lowerQuery","toLowerCase","filter","includes","sort","a","b","sortByField","field","addRandomPerson","newPerson","sex","born","died","Infinity","fatherName","motherName","slug","this","className","type","onClick","value","onChange","e","target","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAA+B,SAACC,GAC3C,IAAQC,EAAWD,EAAXC,OAEFC,EAAsBC,OAAOC,KAAKH,EAAO,IAE/C,OACE,kCACE,gCACE,6BACGC,EAAUG,KAAI,SAAAC,GAAI,OACjB,6BACGA,GADMA,UAMf,gCACGL,EAAOI,KAAI,SAAAE,GAAM,OAChB,6BACGJ,OAAOK,OAAOD,GAAQF,KAAI,SAAAI,GAAU,OACnC,6BACGA,GADMA,OAFJF,EAAOG,e,OCgHXC,E,4MA3HbC,MAAe,CACbC,MAAO,GACPC,OAAQ,GACRC,YAAY,EACZd,OAAO,YAAKe,I,EAGdC,QAAU,WACR,EAAKC,UAAS,SAACC,GAAD,MAAmB,CAC/BJ,YAAaI,EAAaJ,gB,EAI9BK,iBAAmB,WACjB,MAEI,EAAKR,MADPC,EADF,EACEA,MAAOZ,EADT,EACSA,OAAQa,EADjB,EACiBA,OAAQC,EADzB,EACyBA,WAGrBM,EAAgBpB,EAEpB,GAAIY,EAAO,CACT,IAAMS,EAAaT,EAAMU,cAEzBF,EAAgBpB,EACbuB,QAAO,SAAAjB,GAAM,OAAIA,EAAOG,KAAKa,cAAcE,SAASH,MAczD,OAXIR,IACFO,EAAgB,YAAIA,GACjBK,MAAK,SAACC,EAAWC,GAAZ,OACJD,EAAEb,GAAUc,EAAEd,GAAU,GAAK,MAI/BC,IACFM,EAAgB,YAAIA,GAAeJ,WAG9BI,G,EAGTQ,YAAc,SAACC,GACb,EAAKZ,SAAS,CACZJ,OAAQgB,K,EAIZC,gBAAkB,WAChB,IAAMC,EAAY,CAChBtB,KAAM,kBACNuB,IAAK,IACLC,KAAM,KACNC,KAAMC,IACNC,WAAY,gBACZC,WAAY,mBACZC,KAAM,wBAGR,EAAKrB,UAAS,SAAAC,GAAY,MAAK,CAC7BlB,OAAO,CAAE+B,GAAH,mBAAiBb,EAAalB,c,4CAIxC,WAAU,IAAD,OACCY,EAAU2B,KAAK5B,MAAfC,MAEFQ,EAAgBmB,KAAKpB,mBAE3B,OACE,sBAAKqB,UAAU,MAAf,UACE,oDAAqB5B,KAErB,wBACE6B,KAAK,SACLC,QAASH,KAAKT,gBAFhB,wBAOA,wBACEW,KAAK,SACLC,QAASH,KAAKvB,QAFhB,qBAOA,uBACEyB,KAAK,OACLE,MAAO/B,EACPgC,SAAU,SAACC,GACT,EAAK5B,SAAS,CAAEL,MAAOiC,EAAEC,OAAOH,WAIpC,wBACEF,KAAK,SACLC,QAAS,kBAAM,EAAKd,YAAY,SAFlC,0BAOA,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKd,YAAY,SAFlC,0BAOA,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKd,YAAY,SAFlC,0BAO0B,IAAzBR,EAAc2B,QACb,cAAC,EAAD,CAAa/C,OAAQoB,W,GArHb4B,IAAMC,WCRxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.9556752a.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  people: Person[];\n}\n\nexport const PeopleTable: React.FC<Props> = (props) => {\n  const { people } = props;\n\n  const tableHead: string[] = Object.keys(people[0]);\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {tableHead.map(item => (\n            <th key={item}>\n              {item}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr key={person.name}>\n            {Object.values(person).map(personItem => (\n              <td key={personItem}>\n                {personItem}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable';\nimport peopleFromServer from './api/people.json';\n\ntype State = {\n  query: string;\n  sortBy: keyof Person | '';\n  people: Person[];\n  isReversed: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    query: '',\n    sortBy: '',\n    isReversed: false,\n    people: [...peopleFromServer as Person[]],\n  };\n\n  reverse = () => {\n    this.setState((currentState) => ({\n      isReversed: !currentState.isReversed,\n    }));\n  };\n\n  getVisiblePeople = () => {\n    const {\n      query, people, sortBy, isReversed,\n    } = this.state;\n\n    let visiblePeople = people;\n\n    if (query) {\n      const lowerQuery = query.toLowerCase();\n\n      visiblePeople = people\n        .filter(person => person.name.toLowerCase().includes(lowerQuery));\n    }\n\n    if (sortBy) {\n      visiblePeople = [...visiblePeople]\n        .sort((a: Person, b: Person) => (\n          a[sortBy] > b[sortBy] ? 1 : -1\n        ));\n    }\n\n    if (isReversed) {\n      visiblePeople = [...visiblePeople].reverse();\n    }\n\n    return visiblePeople;\n  };\n\n  sortByField = (field: keyof Person) => {\n    this.setState({\n      sortBy: field,\n    });\n  };\n\n  addRandomPerson = () => {\n    const newPerson = {\n      name: 'Eugene Gnedenko',\n      sex: 'm',\n      born: 1998,\n      died: Infinity,\n      fatherName: 'Yuri Gnedenko',\n      motherName: 'Natalia Gnedenko',\n      slug: 'eugene-gnedenko-1998',\n    };\n\n    this.setState(currentState => ({\n      people: [newPerson, ...currentState.people],\n    }));\n  };\n\n  render() {\n    const { query } = this.state;\n\n    const visiblePeople = this.getVisiblePeople();\n\n    return (\n      <div className=\"App\">\n        <h1>{`People table ${query}`}</h1>\n\n        <button\n          type=\"button\"\n          onClick={this.addRandomPerson}\n        >\n          add person\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.reverse}\n        >\n          reverse\n        </button>\n\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            this.setState({ query: e.target.value });\n          }}\n        />\n\n        <button\n          type=\"button\"\n          onClick={() => this.sortByField('born')}\n        >\n          sort by born\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.sortByField('died')}\n        >\n          sort by died\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.sortByField('name')}\n        >\n          sort by name\n        </button>\n\n        {visiblePeople.length !== 0 && (\n          <PeopleTable people={visiblePeople} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}